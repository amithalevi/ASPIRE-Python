import numpy as np
from unittest import TestCase

from aspire.volume import vol_project, im_backproject

import os.path
DATA_DIR = os.path.join(os.path.dirname(__file__), 'saved_test_data')


class VolTestCase(TestCase):
    def setUp(self):
        self.vol = np.load(os.path.join(DATA_DIR, 'mean_8_8_8.npy'))

    def tearDown(self):
        pass

    def testVolProject(self):
        # TODO-AXIS
        rot_matrices = np.load(os.path.join(DATA_DIR, 'rand_rot_matrices32.npy')).transpose((2, 0, 1))
        im = vol_project(self.vol, rot_matrices)

        im5 = im[5, :, :]

        self.assertTrue(np.allclose(
            im5,
            [
                [1.85905126e-03,  -4.96194173e-03, -1.84591208e-02, -9.79755155e-03, -1.08143646e-02, -1.83772911e-02, -8.66487483e-03, -2.94252467e-03],
                [-3.78336715e-05,  2.09491229e-03,  8.72898294e-02,  1.48890124e-01,  2.31093396e-01,  2.12131597e-01,  4.71657372e-02,  2.39449572e-03],
                [-5.49261245e-03,  3.88361439e-02,  3.38378781e-01,  7.73609505e-01,  9.93453899e-01,  6.22702405e-01,  1.26032742e-01,  1.72247549e-02],
                [-1.31442749e-02,  7.71230466e-02,  5.56480717e-01,  1.37395883e+00,  1.59003916e+00,  8.33537600e-01,  2.30814995e-01,  7.95711161e-02],
                [-1.33668147e-02,  1.25185396e-01,  6.15006502e-01,  1.46276165e+00,  1.56511324e+00,  7.44855957e-01,  2.32134500e-01,  6.60844282e-02],
                [-1.37125036e-02,  1.68051327e-01,  5.06916783e-01,  9.19087651e-01,  9.25829346e-01,  3.98452586e-01,  6.94927670e-02,  2.93482792e-03],
                [-1.18141843e-02,  9.45887132e-02,  3.09041840e-01,  2.96079928e-01,  2.00517509e-01,  1.06832929e-01,  6.73548200e-03,  6.97907677e-03],
                [-1.91994802e-03,  6.37902501e-03,  9.32806718e-02,  8.07169185e-02,  1.30838292e-03,  1.18922171e-02,  8.76434923e-03,  2.44529532e-03]
            ]
        ))

    def testImBackProject(self):
        # TODO-AXIS
        rot_matrices = np.load(os.path.join(DATA_DIR, 'rand_rot_matrices32.npy')).transpose((2, 0, 1))[:2, :, :]
        im = np.array([
            [1.85905126e-03,  -4.96194173e-03, -1.84591208e-02, -9.79755155e-03, -1.08143646e-02, -1.83772911e-02, -8.66487483e-03, -2.94252467e-03],
            [-3.78336715e-05,  2.09491229e-03,  8.72898294e-02,  1.48890124e-01,  2.31093396e-01,  2.12131597e-01,  4.71657372e-02,  2.39449572e-03],
            [-5.49261245e-03,  3.88361439e-02,  3.38378781e-01,  7.73609505e-01,  9.93453899e-01,  6.22702405e-01,  1.26032742e-01,  1.72247549e-02],
            [-1.31442749e-02,  7.71230466e-02,  5.56480717e-01,  1.37395883e+00,  1.59003916e+00,  8.33537600e-01,  2.30814995e-01,  7.95711161e-02],
            [-1.33668147e-02,  1.25185396e-01,  6.15006502e-01,  1.46276165e+00,  1.56511324e+00,  7.44855957e-01,  2.32134500e-01,  6.60844282e-02],
            [-1.37125036e-02,  1.68051327e-01,  5.06916783e-01,  9.19087651e-01,  9.25829346e-01,  3.98452586e-01,  6.94927670e-02,  2.93482792e-03],
            [-1.18141843e-02,  9.45887132e-02,  3.09041840e-01,  2.96079928e-01,  2.00517509e-01,  1.06832929e-01,  6.73548200e-03,  6.97907677e-03],
            [-1.91994802e-03,  6.37902501e-03,  9.32806718e-02,  8.07169185e-02,  1.30838292e-03,  1.18922171e-02,  8.76434923e-03,  2.44529532e-03]
        ])
        im = np.stack([im, im], axis=0)

        vol = im_backproject(im, rot_matrices)

        self.assertTrue(np.allclose(
            vol[:, 0, 2],
            np.array([0.02388206, 0.00034775, 0.00434885, 0.01416244, 0.06611082, 0.14045791, 0.1343381, 0.0892055])
        ))

